// Mocks generated by Mockito 5.4.4 from annotations
// in teste_dev_mobile_cientec/test/features/controllers/cadastro_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:teste_dev_mobile_cientec/features/models/destinatario_enum.dart'
    as _i6;
import 'package:teste_dev_mobile_cientec/features/models/person_interface.dart'
    as _i4;
import 'package:teste_dev_mobile_cientec/features/models/servico_enum.dart'
    as _i5;
import 'package:teste_dev_mobile_cientec/features/repository/cadastro_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [CadastroRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCadastroRepository extends _i1.Mock
    implements _i2.CadastroRepository {
  @override
  _i3.Future<(bool, String?)> encaminhar(
    _i4.PersonInterface? person,
    _i5.ServicoEnum? servico,
    String? motivo,
    _i6.DestinatarioEnum? destinatario,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #encaminhar,
          [
            person,
            servico,
            motivo,
            destinatario,
          ],
        ),
        returnValue: _i3.Future<(bool, String?)>.value((false, null)),
        returnValueForMissingStub:
            _i3.Future<(bool, String?)>.value((false, null)),
      ) as _i3.Future<(bool, String?)>);
}
